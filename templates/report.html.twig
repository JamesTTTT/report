{% extends "base.html.twig" %}
{% block title %}Report{% endblock %}

{% block body %}
    
<article class="content">
    <h1>Report</h1>
    <section>
    <h2>Kmom01</h2>
    <p>Jag är väl familjär med objektorienterad programmering från tidigare kurser. Jag har arbetat med objektorientering i Python och javascript förut men tror inte jag har rört objektorienterinegn i PHP förut. </p>
    <p>PHPs objektorientering fungerar likt de av andra programmeringspråk med klasser och objekt. Man använder variablen $this for att referera till nuvarande objekt som används i metoderna inom klassen. Detta är likt att använda this i javascaript eller self i python. För att skapa ett objekt av klassen skriver man $obj = new Class() och för att ropa på en metod inom objektet $obj->metod(). Det finns mutable eller immutable objekt där mutible betyder att man kan förändra objektet under sin levnadstid medans immutable kan man ej ändra.</p>
    <p>Jag tror att jag har ganska bra uppfattning på hur kodbasen, koden och strukturen hänger ihop. Det är väldigt likt det vi använde i design kursen med strukturen och twig. Strukturen känns krångligare än det vi har använt i andra kurser men tror att det underlättar senare.</p>
    <p>I PHP the right way artikeln tyckte jag att sektionen om databaser var väldigt intressant då jag vill utnyttja det vi har lärt oss i Databaskursen. I webteckursen körde vi lite SQL i php men nu är det helt annorlunda då vi har mer kunskaper och erfarenhet inom databaser. Jag vill veta mer om design patterns då jag känner att det kan utnyttjas mycket framöver. Design patterns ger en generell struktur på sitt projekt och gör så att det blir lättare att hantera sin kod för både sig själv och för andra. Jag tyckte med att delen om password hashing var med intressant då jag har läst lite om webbsäkerhet på gymnasiet och hur man kan skydda användarens inlogg-detaljer på en databas.</p>
    <p>Min TIL för denna veckan är att sätta upp ett projekt med symfony och lite mer om hur TWIG frungerar då vi inte gick särskillt djupt i desgin kursen. </p>
    </section>
    
    <section>
    <h2>Kmom02</h2>
    <p>För attanvända arv i PHP skriver man tillexempel ”class B extends A”. Vad som menas med arv i objektorienterad programmering är att en klass ärver offentliga och skyddade attribut, metoder och konstanter från en förälder klass. Komposition är en stark relation mellan klasser alltså kan inte en klass med komposition relation till en annan klass existera utan den klassen. Ett exempel från denna uppgift att deck klassen kan inte existera utan card klassen. I PHP finns det inte stöd för multipelt arv därför finns det trait i stället. Precis som arv finns det metoder och variabler i traits för att utöka en klass. Traits är som kodmoduler som är återanvändbara i flera olika klasser. När en klass implementera ett interface betyder det att klassen gör ett löfte att interfacets metoder skall återfinnas i klassen. Om en klass implemtera ett interface vet man vad man kan göra med den klassen beroende på interfacet. </p>
    <p>Jag är rätt nöjd med min implementation av uppgiften. Jag skapade klasserna card, deck , deck2 och player. För att skapa kortleken skapade jag ett objekt av deck klassen som innehöll femtiotvå unika instanser av card klassen. Varje kort har ett värde, en svit och ett namn om man man använder getDetails metoden. Jag valde att separera värde och namn så att kort som ”kung” är spelbara. För att blanda kortleken använder jag PHP’s inbyggda shufflefunktion. För att dra ett kort skapade jag metoden drawCard som tar $amount som argument. $amount är antalet kort man vill dra, om det finns tillräckligt med kort används array_pop i en forloop som loopar lika många gånger som värdet av $amount. Kortet som blir draget sätts in i en array som håller koll på vilka kort som är dragna så att dem kan senare visas på sidan.  Player klassen används för att hantera spelarens hand. Player klassen har en metod till att dela ut kort till spelaren som tar argumentet array $draw som sätts in i spelarens hand. Jag använder SessionInterface för att spara data i sessioner. På detta vis är datan sparad fast än man har uppdaterat eller bytt sidan.  Klassen Deck2 ärver från klassen Deck men lägger till två jokrar till kortleken. Jag ser lite förbättringspotential i min kodstruktur då jag tycker att jag har lite för mycket kod i min kontroller-sida och jag det känns som jag skriver om mycket kod.</p>
    <p>Jag gjorde inte denna del av uppgiften och avvakta och göra den delen i kmom03.</p>
    <p>Min TIL för detta kmom är att spara data i sessioner med symfony, hur man använder arv i PHP, hur man gör en JSON api med symfony, hur man hantera arv i PHP och bara allmänt hur man använder klasser i PHP. </p>
    </section>
    
    <section>
    <h2>Kmom03</h2>
    <p>Jag skapade spelet 21 utifrån dem spelreglerna som stog på dbwebb.</p>
    <p>Det kändes lite jobbigt att modellera ett kort spel med psuedokod och flödediagram eftersom det är något jag har väldigt lite erfarenhet med och behöver jobba mer med i framtiden för att komma in i processen. I nuläget visste jag inte rikgtigt vart jag skulle börja eller vad som behövdes för att få spelet att fungera. Min kod skiljer sig lite ifrån det jag gjorde i min planering vilket kan bero på att jag inte hade den mest uttänkta lösningen redan i början. Jag vill gärna fortsätta med att jobba på detta vis då man kan komma igång med koden direkt och man har en lite klarare ide på man ska sätta ihop saker och ting när man har planerat i förväg. Att göra på detta vis känns som det hade varit smidigare med ett större projekt som har potential att expandera då att göra ett simpelt kortspel kändes lite enkelt för en planering med schema och psuedokod. </p>
    <p>Jag är relativt nöjd med det jag har skapat. Jag började med att googla exempel på flödeschema och psuedokod så jag kunde exekvera den delen av uppgiften på ett smidigare sätt. För själva koden så använde jag fyra olika klasser Crad, Deck, Player och en ny som kallas Game. Jag gjorde ett Deck objekt som innehöll 52 Card objekt och sedan använde shuffle metoden för att blanda kortleken. Jag skapa två player objekt en till banken och en till självaste spelaren. Player objektet håller koll på handen med kort. Game objektet representera spelet och tar två parameter i sin konstruktion en till banken och en till spelaren. Game objektets jobb är att jämföra värdet på båda spelarnas hand för att sedan berätta vem som vann rundan. På spelplanen finns det tre knappar en draw, en ready och en restart. Draw knappen drar korten till spelarens hand, ready knappen betyder att man är redo och då är det bankens tur att dra kort och restart knappen starta om sessionen. När banken har dragit sina kort jämförs det med spelaren och ett litet meddelande poppar upp i botten som berättar vem som van rundan. Jag ser lite potential att förbättra bankens ai vart den kan dra kort baserat på sannolikhet och jag tycker att min session get och set är lite röriga. </p>
    <p>Jag tycker faktiskt om symfony och jar börjat uppskatta php mer nu när man förstå programmering lite bättre än när vi hade webtec kursen. Symfony är inte särskillt komplicerat och det kan som det är lätt att bygga komplicerade saker i det. Jag tycker med om twig då det gör front end väldigt smidigt då man skapar templates så man inte behöver skriva om mycket kod.</p>
    <p>Mitt today i learned för kmom03 är att använda session request med html inputs för att exekvera delar av koden i kontrollern. Jag har med lärt mig hur man använder flödesdiagram och psudokod för att planera lösningar. </p>
    </section>
    
    <section>
    <h2>Kmom04</h2>
    <p>Phpunit är väldigt likt unit testerna vi gjorde i oopython kursen, så jag tog lite från vad vi lärde oss i den kursen för att lösa denna uppgift. Jag föredrar phpunit till det vi gjorde i python för med phpunit fick man en bättre rapport över det vi gjorde. Mitt ända problem med phpunit var att i terminalen skrev den inte ut all info jag behövde ibland när ett test gick fel. Jag hade mycket bekymmer att få xdebug att fungera nästan så att felsöka det tog nästan lika lång tid som att göra själva uppgiften. </p>
    <p>Min kodtäckning varierade lite beroende på klass men jag är nöjd då vissa metoder inte var särskilt komplicerade och behövde inte riktigt testas. Det hade inte varit omöjligt för mig att nå upp till 100% men kände att testa varenda liten grej inte var nödvändigt. </p>
    <p>Jag hade inga svårigheter med att testa min kod. Det var bara en gång vart jag behövde skapa en ny metod för att göra koden mer testbar men annars var det inga problem. </p>
    <p>Jag fick skapade en metod till deck klassen som visar alla korten som objekt i stället för att returnera kortens attribut. Annars räkte den koden jag redan hade för att testa spelets klasser. Om jag skulle skrivit om koden lite så skulle jag gjort min gameklass lite lättare att testa då den returnera bara strings. </p>
    <p>Jag tycker att testbar kan vara snyggt om man det inte blir överdrivet många ”onödiga” metoder. Om man behöver testa kod kan det bli så att man lägger till fler metoder som gör så att det blir enklare att testa men har ingen riktigt användning annars. Om man vill ha både ren och testbar kod tycker jag att man ska ta det i åtanke redan innan man börja programmera så att man kan planera metoder som är testbara från första början så man inte behöver komplettera efterhand.</p>
    <p>Min til för detta kmom är att dokumentera kod med symfony och göra unitesting med php</p>

    </section>
    
    <section>
    <h2>Kmom05</h2>
    <p>Det gick ganska problem fritt förutom att jag behövde göra om hela proccesen med att skapa entity för jag glömde att skapa en column till författare för boken. Det svåraste var att komma igång men så fort första delen med att sätta upp entity och migration blev klar så började allting att flytta på snabbt.</p>
    <p>Det gick väldigt bra för det gick att använda om mycket av det vi lärde oss i databas kursen med CRUD. För att komma åt min applikation klickar man på bibliotek i nav-baren där presenteras två alternativ ”Create book” och ”View books”. Om man klickar på Create book blir man omdirigerad till en sida vart man kan mata in data för att skapa en ny bok. Ifall man klickar view book så blir man hänvisad till en sida som presentera en tabell med data från böckerna man har skapat. Om man klickar på en boktitel så skickas man till en sida vart bara data från den boken visas. Om man klickar på edit kan man redigera boken och om man klickar delete tas den boken bort. ORM kändes som ett smidigare sätt att hantera databasen än det vi har jobbat med innan. Mitt användargränsnitt för denna uppgift är ganska basic men användbar särskillt när man ska redigera en bok så behöver man inte skriva om alla fält.</p>
    <p>Jag har fått ett bra första intryck till ORM då det är väldigt enkelt att sätta och hämta data utan att behöva strula med massa SQL filer. Det här kommer vara mitt föredragna sätt att arbeta med databaser i samband med hemsidor framöver.</p>
    <p>Mitt TIL för detta kmom är att använda ORM på ett grundläggande sätt och använda CRUD i symfony</p>
    </section>
    
    <section>
    <h2>Kmom06</h2>
    <p>Jag tror att jag har uppfattat det mesta om phpmetrics nu efter detta kursmoment. Jag tyckte om hur phpmetrics skapade stora tabeller som visade all data om klasserna på en och samma gång. Mycket av det som stog där sa mig ingenting då det fanns lite för mycket att hålla koll på som complexity sidan till exempel. Det fanns så många olika sätt att mäta complexity att det var svårt att veta vad som var relevant eller inte. Jag tycker med att phpmetrics har lite flummig design var det var svårt att hålla koll på vart man kunde hitta data man letade efter. Det hjälper inte heller att PHPmetrics var dålig på att skala ner så man fick nästan alltid ha sidan fullscreen. Jag uppskattade hur phpmetrics rankade klasserna så man vet vilka klasser man behöver jobba mer på.</p>
    <p>Jag föredrar scrutinizer till phpmetrics då scrutinizer visade data och kodkvalité på ett mycket smidigare sätt. Scrutinizer uppdaterade med alla sina git commits så man visste hur effektfulla sina ändringar var efter varje commit vilket jag uppskattar. Allting var lätt att förstå och man visste direkt vad man behövde ändra när det var några problem. Badges var ett bra sätt att visa den generella kvalitén på koden. Efter mitt första bygge fick jag bara 6.14 i poäng då min scrutinizer valde att ha med en massa extra filer från tools och extensions som jag hade ingen kontroll över. Jag fixade detta genom att ändra config och då fick jag 9.86 direkt. Problemet med detta var att min coverage fungerade ej med denna configen så jag fick skifta configs lite då och då.</p>
    <p>Jag tycker att det är viktigt att man strävar efter bra kod kvalite då man vill att sin kod ska vara läsbar och hållbar inför framtiden. Om man inte tänker på det kan det vara lätt att göra sina klasser för stora och komplexa i onödan. Att i stället ha mindre och mer återanvändbara klasser och metoder gör så att projekt kan lättare skala och skiftas under tidens gång. Badges är snarare en bra indikation över hur mycket tid utvecklaren har lagt på att optimisterna sin kod än själva kodens kvalité då ett litet märke kan knappat representera kodens innehåll.</p>
    <p>I detta kursmoment har jag lärt mig att använda scrutinizer och phpmetrics samt några nya begrepp inom programmering. Jag har med lärt mig att det är bättre med mindre oanvändbara klasser än stora komplexa klasser.</p>
    </section>
    
    <section>
    <h2>Kmom07-10</h2>
    <p>Mitt projekt är et browser point and click adventure game vart målet är att rymma från jungeln med så många diamanter som möjligt på kortast tid. Spelet använder session för att spara data och om man klara av spelet så rensas sessionen eller om man startar ett nytt spel. Spelet har fyra olika scener (jungle, entrance, innercave, dungeon och ending) som man kan navigera genom att klicka runt på skärmen. Det finns items lite runt om kring som man kan lägga i väskan genom att klicka på dem. Dessa items används antingen för att hitta diamanter eller rymma jungeln. Varje gång du klickar på ett event eller item visas ett meddelande på vad som har hänt. Varje event har tre olika dialoger, en dialog när du har vad de söker, en när du inte har var de söker och en när har redan gett dem vad de söker. För att läsa mer om själva spelet finns det en längre text i about sidan. </p>
    <p>Spelet använder sig av fyra nya klasser ”Player”, ”Item”, ”Manager” och ”Event”. Player klassen används till att hantera items i spelarens väska. Det finns en array vart item objekten läggs in i när dem plockas upp. Klassen item används för alla sakerna man plockar upp och lägger i sin väska. När man skapar ett item objekt så måste man ange ett namn och sökväg till item ikon. Om man klickar på ett item sätts ”picked” boolean till true och det är så twig vet om den ska gömma en item div i spelet. Manager objektet startar timer, håller koll på diamanter och räknar ut score genom att fördela tiden med antalet diamanter gånger 10 000 och sedan avrunda upp. Event klassen är till alla saker man kan integrera med. Event tar en nyckel item och en belönings item som argument. Event objektet kollar om spelaren har rätt nyckel item i sin väska och om det stämmer ersätts de item med ett nytt. </p>
    <p>I about sidan finns det länkar till sidans dokumentation de vill säga länk till phpdoc, phpmetrics, github och scrutinizer. Det står med ett allmänt stycke om projektets kodkvalité och vad som har tagits i åtanke när jag utförde projektet. </p>
    <p>Spelet har en scoreboard som använder Doctrine ORM databas för att spara alla scores. Efter man har klarat av spelet presenteras två alternativ. Man kan antingen spara sin data i databsen eller återvända till huvudmeny. Det finns en länk i huvudmeny som tar en till scoreboardsidan (”/proj/scoreboard”) var man kan se befintliga highscores. Scoreboarden innehåller Spelarens namn, antal diamanter, tiden och score som räknas ut genom att ta antal diamanter delat på tiden gånger tio tusen. Varje gång man spelar genom spelet och klickar save to scoreboards så sparas en ny rad med data. Om man vill radera sin score finns det en delete knapp på varje rad som radera just den scoren. I about sidan finns det en länk som leder till (”/proj/reset”) som radera alla tidigare sparade scores. </p>
    <p>Jag skapade en ny css fil för projektet med en ny stil som passar temat av adventure game. Jag bytte alla färger till ett nytt mörkare färgschema och importerade ett nytt typsnitt ’Macondo’ som passar spelet mer. Typsnittet används inte överallt då det är inte väldigt läsbart i större textstycken. Jag importerade ett mer läsbart typsnitt ’Abel’ som används i about sidan för att göra så att det är lättare att läsa. Jag har försökt mitt bästa att göra sidan användbar som möjligt med tydlig text och tydliga länkar.</p>
    <p>Sidan passera phpcs utan anmärkning men jag passerade inte phpmd och phpstan helt. Det fanns väldigt mycket anmärkningar om koden jag har gjort i tidigare kmom och jag ville lägga fokus på projektet. Jag försökte lösa så många jag kunde inom projektet men det fanns vissa som jag hittade ingen lösning till som ”undefined method” när jag kallade på metoder inom andra klasser.</p>
    <p>Mina enhetstester för Card klasserna är på 100% och för mina nya adventure game klasser ligger de på ca 87%. Event klassen har 86% coverage, Item klassen 100% coverage, Manager klassen 70% coverage och min Player klass 100% coverage. Min konfiguration fil i scrutinizer gör så att det inte går att se någon coverage men jag har skapat en länk till phpunit coverage report i about sidan. </p>
    <p>Jag har dokumenterar min kod med DocBlock kommentarer och generarat en dokumentation med phpdoc som går att se om man går in på about sidan och klickar på phpdoc länken. Jag har gjort desamma med länkarna till phpmetrics och scrutnizer dokumentationen. Det finns med en länk till min kurs repo på github. Det finns block kommentarer som förklarar vad varje metod i varje klass gör och det finns block kommentarer som förklara varenda enhetstest. </p>
    <p>Projektet gick bra att genomföra och det finns väldigt lite som strulade till. Jag har lagt väldigt mycket tid mitt sida och är för det mesta dels stolt över det. De allra största problemen har varit studentservern som ibland framställer erros jag inte har mycket kontroll över som session cleanup. Ibland kan det hindra en att klara av spelet. Spelet fungerar helt och hållet på en lokalserver i alla fall. Ett annat problem har varit att min scrutinzier inte visar coverage men har försökt komma förbi det med att skapa en länk till en coverage sida från about sidan. Det har tagit väldig långtid att bygga det hela och få det att fungera men har aldrig känt att jag har fastnat helt. Projektet har ganska många krav och det tar lite tid att ta sig igenom allting men annars tycker jag att det har gått fint.</p>
    <p>Jag har tyckt om kursens innehåll då det har varit intressant att lära sim om ORM, Symfony och kodkvalité. Jag tyckte om de första kursmomenten vart vi skulle göra en kortlek sedan ett spel med korten för det demonstrera en lärorik utmaning. Jag har nu en djupare förståelse på hur man använder templates som twig för att bygga skickligare sidor. Jag tycker att jag har fått den hjälpen jag har behövt från kursen handledare i discorden. Min största feedback skulle vara att ha lite mer kursmaterial (som videos) redo innan man börjar med kursmomentet så man kan börja direkt och sen lite mer exempel på tidigare arbeten så man får lite inspiration. Annars skulle jag säga att jag inte har några större klagomål. Jag ger kursen 8/10 och jag skulle rekommendera denna kurs till någon som vill lära sig om att utveckla webbapplikationer. </p>
    </section>
</article>
{% endblock %}